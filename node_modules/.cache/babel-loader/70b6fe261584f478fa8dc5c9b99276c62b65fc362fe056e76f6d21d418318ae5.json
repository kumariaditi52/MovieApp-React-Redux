{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie-App-React-Redux\\\\src\\\\components\\\\Pagination.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPage } from '../redux/actions/moviesAction';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pagination() {\n  _s();\n  // save page number (pagination) and update pageCount\n  const [pageCount, setPageCount] = useState(0);\n  const dispatch = useDispatch();\n  // get number of page from reducer\n  const pages = useSelector(state => state.pageCount);\n  useEffect(() => {\n    // update pageCount\n    setPageCount(pages);\n  }, []);\n\n  // For Getting number count of the page\n  const handlePageClick = data => {\n    // get number of page: data.selected + 1\n    dispatch(getPage(data.selected + 1));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      nextLabel: \"next >\",\n      onPageChange: handlePageClick,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 2,\n      pageCount: pageCount,\n      previousLabel: \"< previous\",\n      containerClassName: \"pagination justify-content-center p-3\",\n      pageClassName: \"page-item\",\n      pageLinkClassName: \"page-link\",\n      nextClassName: \"page-item\",\n      nextLinkClassName: \"page-link\",\n      previousClassName: \"page-item\",\n      previousLinkClassName: \"page-link\",\n      breakClassName: \"page-item\",\n      breakLinkClassName: \"page-link\",\n      activeClassName: \"active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Pagination, \"W8o0fsZ97onWCzdDBGUd+CIom5I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useState","useEffect","ReactPaginate","useSelector","useDispatch","getPage","Pagination","pageCount","setPageCount","dispatch","pages","state","handlePageClick","data","selected"],"sources":["D:/Movie-App-React-Redux/src/components/Pagination.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getPage } from '../redux/actions/moviesAction';\r\n\r\nfunction Pagination() {\r\n\r\n    // save page number (pagination) and update pageCount\r\n    const [pageCount, setPageCount] = useState(0);\r\n\r\n    const dispatch = useDispatch();\r\n    // get number of page from reducer\r\n    const pages = useSelector((state) => state.pageCount)\r\n\r\n    useEffect(() => {\r\n        // update pageCount\r\n        setPageCount(pages); \r\n      }, [])\r\n\r\n    // For Getting number count of the page\r\n    const handlePageClick = (data) => {\r\n        // get number of page: data.selected + 1\r\n        dispatch(getPage(data.selected + 1));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                onPageChange={handlePageClick}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={2}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< previous\"\r\n                containerClassName='pagination justify-content-center p-3'\r\n                pageClassName='page-item'\r\n                pageLinkClassName='page-link'\r\n                nextClassName='page-item'\r\n                nextLinkClassName='page-link'\r\n                previousClassName='page-item'\r\n                previousLinkClassName='page-link'\r\n                breakClassName='page-item'\r\n                breakLinkClassName='page-link'\r\n                activeClassName='active'\r\n\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pagination"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,+BAA+B;AAAC;AAAA;AAExD,SAASC,UAAU,GAAG;EAAA;EAElB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMS,QAAQ,GAAGL,WAAW,EAAE;EAC9B;EACA,MAAMM,KAAK,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACJ,SAAS,CAAC;EAErDN,SAAS,CAAC,MAAM;IACZ;IACAO,YAAY,CAACE,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAER;EACA,MAAME,eAAe,GAAIC,IAAI,IAAK;IAC9B;IACAJ,QAAQ,CAACJ,OAAO,CAACQ,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,oBACI;IAAA,uBACI,QAAC,aAAa;MACV,UAAU,EAAC,KAAK;MAChB,SAAS,EAAC,QAAQ;MAClB,YAAY,EAAEF,eAAgB;MAC9B,oBAAoB,EAAE,CAAE;MACxB,kBAAkB,EAAE,CAAE;MACtB,SAAS,EAAEL,SAAU;MACrB,aAAa,EAAC,YAAY;MAC1B,kBAAkB,EAAC,uCAAuC;MAC1D,aAAa,EAAC,WAAW;MACzB,iBAAiB,EAAC,WAAW;MAC7B,aAAa,EAAC,WAAW;MACzB,iBAAiB,EAAC,WAAW;MAC7B,iBAAiB,EAAC,WAAW;MAC7B,qBAAqB,EAAC,WAAW;MACjC,cAAc,EAAC,WAAW;MAC1B,kBAAkB,EAAC,WAAW;MAC9B,eAAe,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA;EAE1B,iBACH;AAEX;AAAC,GA5CQD,UAAU;EAAA,QAKEF,WAAW,EAEdD,WAAW;AAAA;AAAA,KAPpBG,UAAU;AA8CnB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}