{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie-App-React-Redux\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Row } from 'react-bootstrap';\nimport CardMovie from './CardMovie';\nimport NotFound from './NotFound';\nimport Pagination from './Pagination';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllMovie } from '../redux/actions/moviesAction';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieList() {\n  _s();\n  // Hooks\n  const [movies, setMovies] = useState([]);\n\n  //----------------redux-----------------------\n  const dispatch = useDispatch();\n  // To execute the function\n  useEffect(() => {\n    dispatch(getAllMovie());\n  }, []);\n\n  // --- Get movies data by redux\n  const dataMovies = useSelector(state => state.movies);\n  // Set movies data to our movies Hook\n  useEffect(() => {\n    setMovies(dataMovies);\n  }, [dataMovies]);\n  //----------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: [movies.length >= 1 ? movies.map(film => {\n        return /*#__PURE__*/_jsxDEV(CardMovie, {\n          film: film\n        }, film.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 37\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), movies.length >= 1 ? /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 42\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MovieList, \"Rdmxb+Z6eB0q1W3Bugebbr41WAc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","Row","CardMovie","NotFound","Pagination","useSelector","useDispatch","getAllMovie","MovieList","movies","setMovies","dispatch","dataMovies","state","length","map","film","id"],"sources":["D:/Movie-App-React-Redux/src/components/MovieList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Row } from 'react-bootstrap'\r\nimport CardMovie from './CardMovie'\r\nimport NotFound from './NotFound'\r\nimport Pagination from './Pagination'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllMovie } from '../redux/actions/moviesAction';\r\n\r\nfunction MovieList() {\r\n\r\n    // Hooks\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  //----------------redux-----------------------\r\n  const dispatch = useDispatch();\r\n  // To execute the function\r\n  useEffect(() => {\r\n    dispatch(getAllMovie()); \r\n  }, [])\r\n\r\n  // --- Get movies data by redux\r\n  const dataMovies = useSelector((state) => state.movies) \r\n  // Set movies data to our movies Hook\r\n  useEffect(() => {\r\n    setMovies(dataMovies)\r\n  }, [dataMovies])\r\n  //----------------------------------------------\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mt-3\">\r\n                {\r\n                    movies.length >= 1 ?\r\n                        (\r\n                            movies.map((film) => {\r\n                                return (\r\n                                    <CardMovie key={film.id} film={film} />\r\n                                )\r\n                            })\r\n                        ) :\r\n                        <NotFound />\r\n                }\r\n                {\r\n                   movies.length >= 1 ? (<Pagination />) : null\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieList"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,+BAA+B;AAAC;AAAA;AAE5D,SAASC,SAAS,GAAG;EAAA;EAEjB;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMY,QAAQ,GAAGL,WAAW,EAAE;EAC9B;EACAN,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACJ,WAAW,EAAE,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,UAAU,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACJ,MAAM,CAAC;EACvD;EACAT,SAAS,CAAC,MAAM;IACdU,SAAS,CAACE,UAAU,CAAC;EACvB,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAChB;;EAEE,oBACI;IAAA,uBACI,QAAC,GAAG;MAAC,SAAS,EAAC,MAAM;MAAA,WAEbH,MAAM,CAACK,MAAM,IAAI,CAAC,GAEVL,MAAM,CAACM,GAAG,CAAEC,IAAI,IAAK;QACjB,oBACI,QAAC,SAAS;UAAe,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QAAgB;MAE/C,CAAC,CAAC,gBAEN,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,EAGjBR,MAAM,CAACK,MAAM,IAAI,CAAC,gBAAI,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,GAAI,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA;EAE7C,iBACP;AAEX;AAAC,GAxCQN,SAAS;EAAA,QAMCF,WAAW,EAOTD,WAAW;AAAA;AAAA,KAbvBG,SAAS;AA0ClB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}