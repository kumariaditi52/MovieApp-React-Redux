{"ast":null,"code":"import { ALLMOVIES } from '../types/movieType';\nconst initialValue = {\n  movies: [],\n  pageCount: 0\n};\nexport const moviesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ALLMOVIES:\n      return {\n        movies: action.data\n      };\n    default:\n      return state;\n  }\n};\n\n// action.data = action.payload : data c'est \n\n// ---Explication by Chat GPT:---\n// This code defines a reducer function called moviesReducer that manages the state of movies in a React application. The reducer takes in two parameters: state and action.\n\n// The state parameter is the current state of the application, and it is set to an initial value of an object with an empty array of movies and a page count of 0.\n\n// The action parameter is an object that describes an action that has been dispatched, it contains a type and payload.\n\n// The switch statement checks the type property of the action object. If the type is ALLMOVIES, it returns a new object with a movies property that is set to the value of the data property of the action object.\n\n// If the type does not match any of the cases, it returns the current state.\n\n// The reducer looks for a specific action type ALLMOVIES and when it receives this action it updates the state with the data payload of the action.\n\n// The default case will simply return the current state, this will be the state before the action was dispatched.","map":{"version":3,"names":["ALLMOVIES","initialValue","movies","pageCount","moviesReducer","state","action","type","data"],"sources":["D:/Movie-App-React-Redux/src/redux/reducers/moviesReducer.js"],"sourcesContent":["import {ALLMOVIES} from '../types/movieType'\r\n\r\nconst initialValue = { movies: [], pageCount: 0 }\r\nexport const moviesReducer = (state = initialValue, action)=>{\r\n\r\n    switch(action.type){\r\n        case ALLMOVIES :\r\n            return{\r\n                movies: action.data\r\n            }\r\n        default : return state;\r\n    }\r\n}\r\n\r\n// action.data = action.payload : data c'est \r\n\r\n// ---Explication by Chat GPT:---\r\n// This code defines a reducer function called moviesReducer that manages the state of movies in a React application. The reducer takes in two parameters: state and action.\r\n\r\n// The state parameter is the current state of the application, and it is set to an initial value of an object with an empty array of movies and a page count of 0.\r\n\r\n// The action parameter is an object that describes an action that has been dispatched, it contains a type and payload.\r\n\r\n// The switch statement checks the type property of the action object. If the type is ALLMOVIES, it returns a new object with a movies property that is set to the value of the data property of the action object.\r\n\r\n// If the type does not match any of the cases, it returns the current state.\r\n\r\n// The reducer looks for a specific action type ALLMOVIES and when it receives this action it updates the state with the data payload of the action.\r\n\r\n// The default case will simply return the current state, this will be the state before the action was dispatched."],"mappings":"AAAA,SAAQA,SAAS,QAAO,oBAAoB;AAE5C,MAAMC,YAAY,GAAG;EAAEC,MAAM,EAAE,EAAE;EAAEC,SAAS,EAAE;AAAE,CAAC;AACjD,OAAO,MAAMC,aAAa,GAAG,YAAgC;EAAA,IAA/BC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM;EAEtD,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKP,SAAS;MACV,OAAM;QACFE,MAAM,EAAEI,MAAM,CAACE;MACnB,CAAC;IACL;MAAU,OAAOH,KAAK;EAAC;AAE/B,CAAC;;AAED;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}