{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie-App-React-Redux\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Form, Button, Alert, Card } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is invalid';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    }\n    return newErrors;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newErrors = validateForm();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    setIsLoading(true);\n\n    // Simulate API call delay\n    setTimeout(() => {\n      // Check user credentials\n      const existingUsers = JSON.parse(localStorage.getItem('movieAppUsers') || '[]');\n      const user = existingUsers.find(user => user.email === formData.email && user.password === formData.password);\n      if (user) {\n        // Save current user session\n        const userSession = {\n          id: user.id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email,\n          loginTime: new Date().toISOString()\n        };\n        localStorage.setItem('movieAppCurrentUser', JSON.stringify(userSession));\n        setAlertMessage('Login successful! Redirecting...');\n        setShowAlert(true);\n\n        // Redirect to home page after 1.5 seconds\n        setTimeout(() => {\n          navigate('/');\n        }, 1500);\n      } else {\n        setAlertMessage('Invalid email or password. Please try again.');\n        setShowAlert(true);\n      }\n      setIsLoading(false);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center mb-4\",\n              style: {\n                color: '#2c3e50'\n              },\n              children: \"Welcome Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: alertMessage.includes('successful') ? 'success' : 'danger',\n              onClose: () => setShowAlert(false),\n              dismissible: true,\n              children: alertMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  name: \"email\",\n                  value: formData.email,\n                  onChange: handleChange,\n                  isInvalid: !!errors.email,\n                  placeholder: \"Enter your email\",\n                  disabled: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  name: \"password\",\n                  value: formData.password,\n                  onChange: handleChange,\n                  isInvalid: !!errors.password,\n                  placeholder: \"Enter your password\",\n                  disabled: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"w-100 mb-3\",\n                style: {\n                  backgroundColor: '#2c3e50',\n                  border: 'none'\n                },\n                size: \"lg\",\n                disabled: isLoading,\n                children: isLoading ? 'Signing in...' : 'Sign In'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/register\",\n                  style: {\n                    color: '#2c3e50'\n                  },\n                  children: \"Create one here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"iRoL6miUYRtH+BlJtcjf29YaXbI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Form","Button","Alert","Card","Link","useNavigate","Login","formData","setFormData","email","password","errors","setErrors","showAlert","setShowAlert","alertMessage","setAlertMessage","isLoading","setIsLoading","navigate","handleChange","e","name","value","target","prev","validateForm","newErrors","trim","test","handleSubmit","preventDefault","Object","keys","length","setTimeout","existingUsers","JSON","parse","localStorage","getItem","user","find","userSession","id","firstName","lastName","loginTime","Date","toISOString","setItem","stringify","color","includes","backgroundColor","border"],"sources":["D:/Movie-App-React-Redux/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Row, Col, Form, Button, Alert, Card } from 'react-bootstrap';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n        // Clear error when user starts typing\r\n        if (errors[name]) {\r\n            setErrors(prev => ({\r\n                ...prev,\r\n                [name]: ''\r\n            }));\r\n        }\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n\r\n        if (!formData.email.trim()) {\r\n            newErrors.email = 'Email is required';\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n            newErrors.email = 'Email is invalid';\r\n        }\r\n\r\n        if (!formData.password) {\r\n            newErrors.password = 'Password is required';\r\n        }\r\n\r\n        return newErrors;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const newErrors = validateForm();\r\n        \r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        // Simulate API call delay\r\n        setTimeout(() => {\r\n            // Check user credentials\r\n            const existingUsers = JSON.parse(localStorage.getItem('movieAppUsers') || '[]');\r\n            const user = existingUsers.find(\r\n                user => user.email === formData.email && user.password === formData.password\r\n            );\r\n\r\n            if (user) {\r\n                // Save current user session\r\n                const userSession = {\r\n                    id: user.id,\r\n                    firstName: user.firstName,\r\n                    lastName: user.lastName,\r\n                    email: user.email,\r\n                    loginTime: new Date().toISOString()\r\n                };\r\n                \r\n                localStorage.setItem('movieAppCurrentUser', JSON.stringify(userSession));\r\n                \r\n                setAlertMessage('Login successful! Redirecting...');\r\n                setShowAlert(true);\r\n                \r\n                // Redirect to home page after 1.5 seconds\r\n                setTimeout(() => {\r\n                    navigate('/');\r\n                }, 1500);\r\n            } else {\r\n                setAlertMessage('Invalid email or password. Please try again.');\r\n                setShowAlert(true);\r\n            }\r\n            \r\n            setIsLoading(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={6} lg={4}>\r\n                    <Card className=\"shadow\">\r\n                        <Card.Body className=\"p-4\">\r\n                            <h2 className=\"text-center mb-4\" style={{ color: '#2c3e50' }}>\r\n                                Welcome Back\r\n                            </h2>\r\n                            \r\n                            {showAlert && (\r\n                                <Alert \r\n                                    variant={alertMessage.includes('successful') ? 'success' : 'danger'}\r\n                                    onClose={() => setShowAlert(false)} \r\n                                    dismissible\r\n                                >\r\n                                    {alertMessage}\r\n                                </Alert>\r\n                            )}\r\n\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        value={formData.email}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.email}\r\n                                        placeholder=\"Enter your email\"\r\n                                        disabled={isLoading}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"mb-4\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        value={formData.password}\r\n                                        onChange={handleChange}\r\n                                        isInvalid={!!errors.password}\r\n                                        placeholder=\"Enter your password\"\r\n                                        disabled={isLoading}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.password}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"w-100 mb-3\"\r\n                                    style={{ backgroundColor: '#2c3e50', border: 'none' }}\r\n                                    size=\"lg\"\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    {isLoading ? 'Signing in...' : 'Sign In'}\r\n                                </Button>\r\n                            </Form>\r\n\r\n                            <div className=\"text-center\">\r\n                                <p className=\"mb-0\">\r\n                                    Don't have an account?{' '}\r\n                                    <Link to=\"/register\" style={{ color: '#2c3e50' }}>\r\n                                        Create one here\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}